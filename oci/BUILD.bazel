load("@aspect_bazel_lib//:bzl_library.bzl", "bzl_library")
load("@aspect_bazel_lib//lib:utils.bzl", bazel_lib_utils = "utils")

exports_files(
    glob(["*.bzl"]),
    visibility = ["//docs:__pkg__"],
)

# These are the targets rule authors should put in their "toolchains"
# attribute in order to get a crane/regctl executable for the correct platform.
# See https://docs.bazel.build/versions/main/toolchains.html#writing-rules-that-use-toolchains
toolchain_type(
    name = "crane_toolchain_type",
    visibility = ["//visibility:public"],
)

toolchain_type(
    name = "regctl_toolchain_type",
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "repositories",
    srcs = ["repositories.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//oci/private:load",
        "//oci/private:toolchains_repo",
        "//oci/private:versions",
        "@aspect_bazel_lib//lib:repositories",
        "@bazel_features//:bzl_files",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ] + ["@bazel_tools//tools/build_defs/repo:cache.bzl"] if bazel_lib_utils.is_bazel_7_or_greater() else [],
)

bzl_library(
    name = "pull",
    srcs = ["pull.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//oci/private:pull",
        "//oci/private:util",
    ],
)

bzl_library(
    name = "defs",
    srcs = ["defs.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//oci/private:image",
        "//oci/private:image_index",
        "//oci/private:load",
        "//oci/private:push",
        "@aspect_bazel_lib//lib:copy_file",
        "@aspect_bazel_lib//lib:directory_path",
        "@aspect_bazel_lib//lib:jq",
        "@bazel_skylib//lib:types",
        "@bazel_skylib//rules:write_file",
    ],
)

bzl_library(
    name = "dependencies",
    srcs = ["dependencies.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ] + ["@bazel_tools//tools/build_defs/repo:cache.bzl"] if bazel_lib_utils.is_bazel_7_or_greater() else [],
)

bzl_library(
    name = "extensions",
    srcs = ["extensions.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        ":pull",
        ":repositories",
    ],
)

bzl_library(
    name = "toolchain",
    srcs = ["toolchain.bzl"],
    visibility = ["//visibility:public"],
)
