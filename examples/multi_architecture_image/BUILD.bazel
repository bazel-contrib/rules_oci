load("@tar.bzl//tar:tar.bzl", "tar")
load("@aspect_bazel_lib//lib:testing.bzl", "assert_contains")
load("//oci:defs.bzl", "oci_image", "oci_image_index", "oci_load")
load(":transition.bzl", "multi_arch")

NOT_WINDOWS = select({
    "@platforms//os:windows": ["@platforms//:incompatible"],
    "//conditions:default": [],
})

tar(
    name = "app",
    srcs = ["test.bash"],
)

oci_image(
    name = "image",
    base = "@ubuntu",
    cmd = ["examples/multi_architecture_image/test.bash"],
    entrypoint = ["bash"],
    tars = [":app"],
)

multi_arch(
    name = "images",
    image = ":image",
    platforms = [
        "//examples:linux_arm64",
        "//examples:linux_amd64",
    ],
)

oci_image_index(
    name = "index",
    images = [
        ":images",
    ],
    # todo: re-enable on windows when oci_load is fixed
    target_compatible_with = NOT_WINDOWS,
)

oci_load(
    name = "load",
    image = ":index",
    repo_tags = ["my-repository:latest"],
    format = "oci",
    # todo: re-enable on windows when oci_load is fixed
    target_compatible_with = NOT_WINDOWS,
)

assert_contains(
    name = "check_digest",
    actual = ":index.digest",
    expected = "sha256:a2b8ae94672721788b67874f27cf3574fada3ccccc69f483bcb43de653573fe0",
)
